diff --git a/media/sctp/sctp_transport.cc b/media/sctp/sctp_transport.cc
index 1a6dc334e1..f349aee946 100644
--- a/media/sctp/sctp_transport.cc
+++ b/media/sctp/sctp_transport.cc
@@ -293,11 +293,32 @@ class SctpTransport::UsrSctpWrapper {
     // See: http://lakerest.net/pipermail/sctp-coders/2012-January/009438.html
     // See: http://svnweb.freebsd.org/base?view=revision&revision=229805
     // usrsctp_sysctl_set_sctp_blackhole(2);
+    
+    // Do not send ABORTs in response to INITs (1).
+    // Do not send ABORTs for received Out of the Blue packets (2).
+    usrsctp_sysctl_set_sctp_blackhole(2);
+
+    // Enable interleaving messages for different streams (incoming)
+    // See: https://tools.ietf.org/html/rfc6458#section-8.1.20
+    usrsctp_sysctl_set_sctp_default_frag_interleave(2);
 
     // Set the number of default outgoing streams. This is the number we'll
     // send in the SCTP INIT message.
     usrsctp_sysctl_set_sctp_nr_outgoing_streams_default(kMaxSctpStreams);
 
+    // Disabling authentication and dynamic address reconfiguration as neither
+    // of them are used for data channel and only result in additional code
+    // Disable the Address Reconfiguration extension
+    usrsctp_sysctl_set_sctp_asconf_enable(0);
+    // Disable the Authentication extension
+    usrsctp_sysctl_set_sctp_auth_enable(0);
+
+    // Disable the NR-SACK extension (not standardised)
+    usrsctp_sysctl_set_sctp_nrsack_enable(0);
+
+    // Disable the Packet Drop Report extension (not standardised)
+    usrsctp_sysctl_set_sctp_pktdrop_enable(0);
+
     g_transport_map_ = new SctpTransportMap();
   }
 
